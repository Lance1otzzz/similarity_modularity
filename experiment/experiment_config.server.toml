# Server-safe conservative config (dual-CPU, 24 cores each)
# Strategy: single process, pinned to CPU0 (cores 0–23), no OpenMP threading.

[algorithm_commands]
8 = "plusplus"
9 = "flm"
10 = "louvain"
12 = "both"
13 = "bipolar"
14 = "hybrid"
15 = "tri_kmeans"

[output_mapping]
plusplus = "plusplus"
flm = "flm"
louvain = "louvain"
both = "both"
bipolar = "bipolar"
hybrid = "hybrid"
tri_kmeans = "tri_kmeans"

# Columns for timing results in the output table
table_columns = [
  "plusplus_cal_time",
  "flm_cal_time",
  "louvain_time",
  "both_preprocessing_time",
  "both_cal_time",
  "bipolar_preprocessing_time",
  "bipolar_cal_time",
  "hybrid_preprocessing_time",
  "hybrid_cal_time",
  "tri_kmeans_preprocessing_time",
  "tri_kmeans_cal_time",
]

# Datasets to run experiments on
target_datasets = [
  "SinaNet",
  "Cora",
  "CiteSeer",
  "CoauthorCS",
  "CoauthorPhysics",
  "PubMed",
  "AmazonPhoto",
  "AmazonComputers",
  "Yelp",
  "Reddit",
  "AmazonProducts",
]

# Percentiles used to derive distance constraints r
distance_percentiles = [5, 10, 20, 50, 80]

[sampling_config]
max_samples = 10000
use_edges_for_sampling = true
cache_distance_data = true

[experiment_config]
enable_timeout = false
timeout_seconds = 300
sleep_between_runs = 0.1
main_program_path = "./main"
# Build/check
compile_before_run = true
build_command = "make -j"
rebuild_on_source_change = true
# Concurrency: most conservative
max_workers = 1
omp_threads_per_proc = 1
# Pin this single worker to CPU0 (cores 0–23) to avoid cross-socket contention
pin_workers = true
cpu_affinity_list = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]
use_numactl = false  # bind CPU+memory to NUMA node(s) using numactl, if available
# numa_nodes = [0]  # optional list of NUMA nodes per slot (cycled). Alternatively: numa_socket = 0


[output_config]
results_dir = "experiment_results"
cache_dir = "distance_cache"
save_intermediate = true
logs_dir = "experiment_logs"
